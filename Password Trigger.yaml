---
- hosts: localhost
  gather_facts: no
  vars:
    # ServiceNow Configuration
    servicenow_instance: "https://dev247928.service-now.com/"
    servicenow_username: "admin"
    servicenow_password: "%ml4Vs9RXE/s"
    
    # Catalog Item Configuration
    catalog_sys_id: "d58f4b528388e210d081f696feaad399"
    
    # Webhook Payload Variables
    user_email: "{{ awx_webhook_payload.username | default('user@example.com') }}"
    additional_params: "{{ awx_webhook_payload.additional_params | default({}) }}"

  tasks:
    - name: Test Catalog Item Prerequisites
      block:
        - name: Fetch Catalog Item Details
          uri:
            url: "{{ servicenow_instance }}/api/now/table/sc_cat_item/{{ catalog_sys_id }}"
            method: GET
            url_username: "{{ servicenow_username }}"
            url_password: "{{ servicenow_password }}"
            force_basic_auth: yes
            return_content: yes
            status_code: 200
          register: catalog_item

        - name: Fetch Catalog Item Variables
          uri:
            url: "{{ servicenow_instance }}/api/now/table/sc_item_option"
            method: GET
            url_username: "{{ servicenow_username }}"
            url_password: "{{ servicenow_password }}"
            force_basic_auth: yes
            return_content: yes
            status_code: 200
            params:
              sysparm_query: "cat_item={{ catalog_sys_id }}"
          register: catalog_variables

        - name: Validate Catalog Item Prerequisites
          assert:
            that:
              - catalog_item.json.result is defined
              - catalog_variables.json.result | length > 0
            fail_msg: "Catalog item validation failed"

        - name: Debug Catalog Item Details
          debug:
            msg:
              - "Catalog Item Name: {{ catalog_item.json.result.name }}"
              - "Catalog Variables: {{ catalog_variables.json.result | length }} variables found"

    - name: Prepare Catalog Request
      block:
        - name: Create Catalog Request
          uri:
            url: "{{ servicenow_instance }}/api/now/table/sc_request"
            method: POST
            url_username: "{{ servicenow_username }}"
            url_password: "{{ servicenow_password }}"
            force_basic_auth: yes
            body_format: json
            body:
              short_description: "Catalog Request for {{ catalog_item.json.result.name }}"
              requested_for: "{{ user_email }}"
            return_content: yes
            status_code: [200, 201]
          register: catalog_request

        - name: Create Catalog Request Item
          uri:
            url: "{{ servicenow_instance }}/api/now/table/sc_req_item"
            method: POST
            url_username: "{{ servicenow_username }}"
            url_password: "{{ servicenow_password }}"
            force_basic_auth: yes
            body_format: json
            body:
              request: "{{ catalog_request.json.result.sys_id }}"
              cat_item: "{{ catalog_sys_id }}"
              quantity: 1
            return_content: yes
            status_code: [200, 201]
          register: catalog_request_item

        - name: Add Dynamic Variables to Request
          uri:
            url: "{{ servicenow_instance }}/api/now/table/sc_item_option_mtom"
            method: POST
            url_username: "{{ servicenow_username }}"
            url_password: "{{ servicenow_password }}"
            force_basic_auth: yes
            body_format: json
            body:
              request_item: "{{ catalog_request_item.json.result.sys_id }}"
              item_option: "{{ item.key }}"
              value: "{{ item.value }}"
          loop: "{{ additional_params | dict2items }}"
          when: additional_params is defined and additional_params | length > 0

    - name: Monitor Approval Status
      block:
        - name: Check Request Approval Status
          uri:
            url: "{{ servicenow_instance }}/api/now/table/sc_request/{{ catalog_request.json.result.sys_id }}"
            method: GET
            url_username: "{{ servicenow_username }}"
            url_password: "{{ servicenow_password }}"
            force_basic_auth: yes
            return_content: yes
            params:
              sysparm_fields: "state"
          register: request_status
          retries: 10
          delay: 30
          until: 
            - request_status.json.result.state == 'APPROVED'

        - name: Trigger Workflow Execution
          awx.awx.job_launch:
            job_template: "Your-Workflow-Template-Name"
            extra_vars:
              request_id: "{{ catalog_request.json.result.sys_id }}"
              user_email: "{{ user_email }}"
          when: request_status.json.result.state == 'APPROVED'

      rescue:
        - name: Handle Approval Timeout or Rejection
          debug:
            msg: "Request not approved or timed out"

    - name: Final Workflow Summary
      debug:
        msg:
          - "Catalog Request Created: {{ catalog_request.json.result.sys_id }}"
          - "Waiting for Manager Approval"
